name: Docker Image CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: dunny test
      run: echo ${{ secrets.DOCKERHUB_USERNAME }}/smarter_rss_proxy:${{ github.workflow_sha | slice(0, 7) }}
    - name: Build image
      run: docker build . --file Dockerfile --tag smarter_rss_proxy
    - name: Tests
      run: docker run smarter_rss_proxy pytest /app/tests
    - name: Linter
      run: docker run smarter_rss_proxy ruff check --no-cache /app/src
    - name: Tag Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        docker tag smarter_rss_proxy ${{ secrets.DOCKERHUB_USERNAME }}/smarter_rss_proxy
        docker tag smarter_rss_proxy ${{ secrets.DOCKERHUB_USERNAME }}/smarter_rss_proxy:${{ github.sha }}
    - name: Login to Docker Hub
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/smarter_rss_proxy:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/smarter_rss_proxy:${{ github.sha }}

  deploy:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
    - name: Deploy on server
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
          # Pull the latest image
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/smarter_rss_proxy:latest
          
          # Stop and remove the existing container
          docker stop smarter_rss_proxy || true
          docker rm smarter_rss_proxy || true
          
          # Run the new container
          docker run -d --restart unless-stopped --name smarter_rss_proxy -p 8000:8000 ${{ secrets.DOCKERHUB_USERNAME }}/smarter_rss_proxy:latest
        EOF
